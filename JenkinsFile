pipeline {
    agent any

    environment {
        KUBECTL = "./kubectl"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git credentialsId: 'github-creds', url: 'https://github.com/1chirag/Sigma-Assignment.git', branch: 'main'
            }
        }

        stage('Install Kubectl') {
            steps {
                sh '''
                    echo Installing kubectl locally...
                    curl -LO https://dl.k8s.io/release/v1.32.0/bin/linux/amd64/kubectl
                    chmod +x kubectl
                    ${KUBECTL} version --client
                '''
            }
        }

        stage('Create Secrets') {
            steps {
                withCredentials([
                    usernamePassword(credentialsId: 'postgres-credentials', usernameVariable: 'PGUSER', passwordVariable: 'PGPASS'),
                    string(credentialsId: 'pgadmin-password', variable: 'PGADMIN_PASS')
                ]) {
                    sh '''
                        ${KUBECTL} delete secret postgres-secret --ignore-not-found
                        ${KUBECTL} create secret generic postgres-secret \
                          --from-literal=POSTGRES_DB=wordpress \
                          --from-literal=POSTGRES_USER=$PGUSER \
                          --from-literal=POSTGRES_PASSWORD=$PGPASS

                        ${KUBECTL} delete secret pgadmin-secret --ignore-not-found
                        ${KUBECTL} create secret generic pgadmin-secret \
                          --from-literal=PGADMIN_DEFAULT_PASSWORD=$PGADMIN_PASS
                    '''
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                sh '''
                    ${KUBECTL} apply -f kubernetes/postgres/postgres-pvc.yaml
                    ${KUBECTL} apply -f kubernetes/postgres/postgres-deployment.yaml
                    ${KUBECTL} apply -f kubernetes/postgres/postgres-service.yaml

                    ${KUBECTL} apply -f kubernetes/pgadmin/pgadmin-pvc.yaml
                    ${KUBECTL} apply -f kubernetes/pgadmin/pgadmin-configmap.yaml
                    ${KUBECTL} apply -f kubernetes/pgadmin/pgadmin-deployment.yaml
                    ${KUBECTL} apply -f kubernetes/pgadmin/pgadmin-service.yaml
                    ${KUBECTL} apply -f kubernetes/pgadmin/pgadmin-ingress.yaml

                    ${KUBECTL} apply -f kubernetes/wordpress/wordpress-pvc.yaml
                    ${KUBECTL} apply -f kubernetes/wordpress/wordpress-deployment.yaml
                    ${KUBECTL} apply -f kubernetes/wordpress/wordpress-service.yaml
                    ${KUBECTL} apply -f kubernetes/wordpress/wordpress-hpa.yaml
                    ${KUBECTL} apply -f kubernetes/wordpress/wordpress-ingress.yaml
                '''
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully.'
            sh 'rm -f kubectl'
        }
        failure {
            echo '❌ Pipeline failed.'
            sh 'rm -f kubectl'
        }
    }
}
